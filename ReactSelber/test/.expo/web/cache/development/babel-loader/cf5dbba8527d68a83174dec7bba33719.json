{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Dokumente\\\\Development\\\\UBQ\\\\UBQ2020Cobans\\\\ReactSelber\\\\test\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Beleuchtung } from \"./Beleuchtung\";\nimport { Navigation } from \"./Navigation\";\nimport { Home } from \"./Home\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport mqtt from \"mqtt\";\nvar client;\nvar mqttBrokerIP = \"mqtt://34.107.25.251\";\nvar portNum = 1888;\nimport GLOBAL from \"./globalData.js\";\n\nvar reactApp = function (_Component) {\n  _inherits(reactApp, _Component);\n\n  var _super = _createSuper(reactApp);\n\n  function reactApp() {\n    var _this;\n\n    _classCallCheck(this, reactApp);\n\n    _this = _super.call(this);\n    _this.state = {\n      myText: \"My Original Text\",\n      data: 'Jordan Belfort',\n      hum: 4224\n    };\n    GLOBAL.temperature = _assertThisInitialized(_this);\n    GLOBAL.humidity = _assertThisInitialized(_this);\n    GLOBAL.heatindex = _assertThisInitialized(_this);\n    GLOBAL.gauge = _assertThisInitialized(_this);\n    _this.getHumidity = _this.getHumidity.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(reactApp, [{\n    key: \"getHumidity\",\n    value: function getHumidity() {\n      if (GLOBAL.humidity.state.humidity !== undefined) {\n        return parseFloat(GLOBAL.humidity.state.humidity);\n      } else {\n        return 42;\n      }\n    }\n  }, {\n    key: \"getTemperature\",\n    value: function getTemperature() {\n      if (GLOBAL.temperature.state.temperature !== undefined) {\n        return parseFloat(GLOBAL.temperature.state.temperature);\n      } else {\n        return 42;\n      }\n    }\n  }, {\n    key: \"getHeatindex\",\n    value: function getHeatindex() {\n      if (GLOBAL.heatindex.state.heatindex !== undefined) {\n        return parseFloat(GLOBAL.heatindex.state.heatindex);\n      } else {\n        return 42;\n      }\n    }\n  }, {\n    key: \"setLedColor\",\n    value: function setLedColor(color) {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n      result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      } : null;\n      client.publish(\"led1/color\", color.toString(), {\n        qos: 1\n      });\n    }\n  }, {\n    key: \"setLedState\",\n    value: function setLedState(state) {\n      console.log(state);\n\n      if (state == true) {\n        client.publish(\"led1/state\", \"1\", {\n          qos: 1\n        });\n      } else {\n        client.publish(\"led1/state\", \"0\", {\n          qos: 1\n        });\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      client = mqtt.connect(mqttBrokerIP, {\n        clientId: 'SmartCoban',\n        port: portNum,\n        path: '/mqtt',\n        protocolId: 'MQIsdp',\n        protocolVersion: 3,\n        connectTimeout: 5000\n      });\n      client.on(\"connect\", function (err) {\n        console.log(\">>>\" + err);\n        client.subscribe(\"dht22/humidity\", function (err) {\n          if (!err) {} else {\n            console.log(err);\n          }\n        });\n        client.subscribe(\"dht22/temperature\", function (err) {\n          if (err) {\n            console.log(err);\n          }\n        });\n        client.subscribe(\"dht22/humidity\", function (err) {\n          if (err) {\n            console.log(err);\n          }\n        });\n        client.subscribe(\"dht22/heatindex\", function (err) {\n          if (err) {\n            console.log(err);\n          }\n        });\n      });\n      client.on(\"message\", function (topic, message) {\n        console.log(topic + \": \" + message.toString());\n\n        switch (topic) {\n          case \"dht22/temperature\":\n            GLOBAL.temperature.setState({\n              temperature: message.toString()\n            });\n            break;\n\n          case \"dht22/humidity\":\n            GLOBAL.humidity.setState({\n              humidity: message.toString()\n            });\n            break;\n\n          case \"dht22/heatindex\":\n            GLOBAL.humidity.setState({\n              heatindex: message.toString()\n            });\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, React.createElement(Route, {\n        path: \"/Beleuchtung\",\n        component: Beleuchtung,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }), React.createElement(Route, {\n        path: \"/Home\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }), React.createElement(Redirect, {\n        to: \"/Home\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return reactApp;\n}(Component);\n\nexport { reactApp as default };","map":{"version":3,"sources":["D:/Dokumente/Development/UBQ/UBQ2020Cobans/ReactSelber/test/App.js"],"names":["React","Component","Beleuchtung","Navigation","Home","BrowserRouter","Route","Switch","Redirect","mqtt","client","mqttBrokerIP","portNum","GLOBAL","reactApp","state","myText","data","hum","temperature","humidity","heatindex","gauge","getHumidity","bind","undefined","parseFloat","color","result","exec","r","parseInt","g","b","publish","toString","qos","console","log","connect","clientId","port","path","protocolId","protocolVersion","connectTimeout","on","err","subscribe","topic","message","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Beleuchtung } from \"./Beleuchtung\";\r\nimport { Navigation } from \"./Navigation\";\r\nimport { Home }   from \"./Home\";\r\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport mqtt from \"mqtt\";\r\n\r\nvar client; //mqtt client object\r\nvar mqttBrokerIP=\"mqtt://34.107.25.251\";\r\nvar portNum = 1888;\r\n\r\nimport GLOBAL from './globalData.js'\r\n\r\n\r\nexport default class reactApp extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myText: \"My Original Text\",\r\n      data: 'Jordan Belfort',\r\n      hum : 4224,\r\n    };\r\n    GLOBAL.temperature=this;\r\n    GLOBAL.humidity=this;\r\n    GLOBAL.heatindex=this;\r\n    GLOBAL.gauge=this;\r\n\r\n    this.getHumidity=this.getHumidity.bind(this);\r\n  }\r\n\r\n  getHumidity(){    \r\n    if(GLOBAL.humidity.state.humidity!==undefined){\r\n      return parseFloat(GLOBAL.humidity.state.humidity);\r\n    }else{\r\n      return 42;\r\n    }\r\n  }\r\n\r\n  getTemperature(){    \r\n    if(GLOBAL.temperature.state.temperature!==undefined){\r\n      return parseFloat(GLOBAL.temperature.state.temperature);\r\n    }else{\r\n      return 42;\r\n    }\r\n  }\r\n\r\n  getHeatindex(){    \r\n    if(GLOBAL.heatindex.state.heatindex!==undefined){\r\n      return parseFloat(GLOBAL.heatindex.state.heatindex);\r\n    }else{\r\n      return 42;\r\n    }\r\n  }\r\n\r\n  setLedColor(color){\r\n    //console.log(\"from color picker: \"+color);\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\r\n    result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n    } : null;\r\n\r\n\r\n    client.publish(\"led1/color\", color.toString(),{qos: 1});    \r\n  }\r\n  \r\n  setLedState(state){\r\n    //TODO: led state topic hinzufugen \r\n    console.log(state);\r\n    if(state==true){\r\n      client.publish(\"led1/state\", \"1\",{qos: 1});    \r\n    }else{\r\n      client.publish(\"led1/state\", \"0\",{qos: 1}); \r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  componentWillMount() {  \r\n    client = mqtt.connect(mqttBrokerIP,{\r\n      clientId: 'SmartCoban',\r\n      port: portNum,\r\n      path: '/mqtt',\r\n      protocolId: 'MQIsdp',\r\n        protocolVersion: 3,\r\n        connectTimeout:5000,\r\n        //incomingStore:manager.incoming,\r\n        //outgoingStore:manager.outgoing\r\n      });\r\n\r\n\r\n      client.on(\"connect\",function(err){\r\n        console.log(\">>>\"+err);\r\n\r\n        client.subscribe(\"dht22/humidity\", function (err) {\r\n          if (!err) { \r\n            //client.publish(\"dht22/humidity\", \"Hello on startup\",{qos: 1});\r\n          }else{\r\n            console.log(err);\r\n          }\r\n        });\r\n\r\n        \r\n        client.subscribe(\"dht22/temperature\" , function(err){if(err){console.log(err)}});\r\n        client.subscribe(\"dht22/humidity\" ,function(err){if(err){console.log(err)}});\r\n        client.subscribe(\"dht22/heatindex\" , function(err){if(err){console.log(err)}});\r\n\r\n        //TODO: bmp280 topics hinzufugen\r\n       \r\n      });\r\n\r\n\r\n      //TODO: restliche topics switchen\r\n      client.on(\"message\",function(topic,message){\r\n        console.log(topic+\": \"+message.toString());\r\n\r\n        switch(topic){\r\n          case \"dht22/temperature\":\r\n            GLOBAL.temperature.setState({temperature:message.toString()}); \r\n            break;\r\n\r\n          case \"dht22/humidity\":\r\n            GLOBAL.humidity.setState({humidity:message.toString()}); \r\n            break;\r\n\r\n          case \"dht22/heatindex\":\r\n            GLOBAL.humidity.setState({heatindex:message.toString()}); \r\n            break;\r\n        }\r\n      });            \r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <BrowserRouter>\r\n      <Navigation/>\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path='/Beleuchtung' component={Beleuchtung} />\r\n          <Route path='/Home' component={Home} />\r\n          <Redirect to='/Home' component={Home} />\r\n        </Switch>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}