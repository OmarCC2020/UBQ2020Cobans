{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/cc/Desktop/GitReact/UBQ2020Cobans/ReactSelber/test/App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ApexCharts } from \"react-native-web/dist/index\";\nvar data = [];\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, \"Die Cobans\"), React.createElement(Button, {\n        title: \"Test1\",\n        onPress: function onPress() {\n          return alert(\"Zahl1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Test2\",\n        onPress: function onPress() {\n          return alert(\"Zahl2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Test3\",\n        onPress: function onPress() {\n          return alert(\"Zahl3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Test4\",\n        onPress: function onPress() {\n          return alert(\"Zahl4\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nnew Chart(document.getElementById(\"bar-chart\"), {\n  type: 'bar',\n  data: {\n    labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\n      data: [2478, 5267, 734, 784, 433]\n    }]\n  },\n  options: {\n    legend: {\n      display: false\n    },\n    title: {\n      display: true,\n      text: 'Predicted world population (millions) in 2050'\n    }\n  }\n});","map":{"version":3,"sources":["/home/cc/Desktop/GitReact/UBQ2020Cobans/ReactSelber/test/App.js"],"names":["React","ApexCharts","data","App","styles","container","alert","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","Chart","document","getElementById","type","labels","datasets","label","options","legend","display","title","text"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;SACyCC,U;AAEzC,IAAMC,IAAI,GAAG,EAAb;;IAIqBC,G;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,CAAC,OAAD,CAAX;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMA,KAAK,CAAC,OAAD,CAAX;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMA,KAAK,CAAC,OAAD,CAAX;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMA,KAAK,CAAC,OAAD,CAAX;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAYD;;;;EAd8BN,KAAK,CAACO,S;;SAAlBJ,G;AAmBrB,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AASA,IAAIC,KAAJ,CAAUC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAV,EAAgD;AAC9CC,EAAAA,IAAI,EAAE,KADwC;AAE9Cf,EAAAA,IAAI,EAAE;AACJgB,IAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,eAA7B,EAA8C,eAA9C,CADJ;AAEJC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,uBADT;AAEET,MAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAsB,SAAtB,EAAgC,SAAhC,EAA0C,SAA1C,CAFnB;AAGET,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,GAAX,EAAe,GAAf,EAAmB,GAAnB;AAHR,KADQ;AAFN,GAFwC;AAY9CmB,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADD;AAEPC,IAAAA,KAAK,EAAE;AACLD,MAAAA,OAAO,EAAE,IADJ;AAELE,MAAAA,IAAI,EAAE;AAFD;AAFA;AAZqC,CAAhD","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button, ApexCharts } from 'react-native';\n \nconst data = [\n\n];\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>Die Cobans</Text>\n        <Button title=\"Test1\" onPress={() => alert(\"Zahl1\")}/>\n        <Button title=\"Test2\" onPress={() => alert(\"Zahl2\")}/>\n        <Button title=\"Test3\" onPress={() => alert(\"Zahl3\")}/>\n        <Button title=\"Test4\" onPress={() => alert(\"Zahl4\")}/>\n\n\n\n      </View>\n    );\n  }\n}\n\n\n//Styles f√ºr aussehen\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nnew Chart(document.getElementById(\"bar-chart\"), {\n  type: 'bar',\n  data: {\n    labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n    datasets: [\n      {\n        label: \"Population (millions)\",\n        backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\n        data: [2478,5267,734,784,433]\n      }\n    ]\n  },\n  options: {\n    legend: { display: false },\n    title: {\n      display: true,\n      text: 'Predicted world population (millions) in 2050'\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}