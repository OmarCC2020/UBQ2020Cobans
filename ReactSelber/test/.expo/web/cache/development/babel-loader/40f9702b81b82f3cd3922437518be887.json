{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Dokumente\\\\Development\\\\UBQ\\\\UBQ2020Cobans\\\\REactSelber\\\\test\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Beleuchtung } from \"./Beleuchtung\";\nimport { Navigation } from \"./Navigation\";\nimport { Home } from \"./Home\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport mqtt from \"mqtt\";\nvar client;\nvar mqttBrokerIP = \"mqtt://34.107.25.251\";\nvar portNum = 1888;\nimport GLOBAL_DATA from \"./globalData.js\";\n\nvar reactApp = function (_Component) {\n  _inherits(reactApp, _Component);\n\n  var _super = _createSuper(reactApp);\n\n  function reactApp() {\n    var _this;\n\n    _classCallCheck(this, reactApp);\n\n    _this = _super.call(this);\n    _this.state = {\n      myText: \"My Original Text\",\n      _humidity: 0,\n      data: 'Jordan Belfort'\n    };\n    GLOBAL_DATA.temperature = _assertThisInitialized(_this);\n    GLOBAL_DATA.humidity = _assertThisInitialized(_this);\n    GLOBAL_DATA.gauge = _assertThisInitialized(_this);\n    _this.setHumidity = _this.getHumidity.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(reactApp, [{\n    key: \"getHumidity\",\n    value: function getHumidity() {\n      console.log(\"->>>>\" + this.state.humidity);\n      return 42;\n      return GLOBAL_DATA.humidity.toString();\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      client = mqtt.connect(mqttBrokerIP, {\n        clientId: 'SmartCoban',\n        port: portNum,\n        path: '/mqtt',\n        protocolId: 'MQIsdp',\n        protocolVersion: 3,\n        connectTimeout: 5000\n      });\n      client.on(\"connect\", function (err) {\n        console.log(\">>>\" + err);\n        client.subscribe(\"dht22/humidity\", function (err) {\n          if (!err) {\n            client.publish(\"dht22/humidity\", \"Hello on startup\", {\n              qos: 1\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      });\n      client.on(\"message\", function (topic, message) {\n        console.log(topic + \": \" + message.toString());\n        GLOBAL_DATA.humidity.setState({\n          humidity: message.toString()\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, React.createElement(Route, {\n        path: \"/Beleuchtung\",\n        component: Beleuchtung,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }), React.createElement(Route, {\n        path: \"/Home\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), React.createElement(Redirect, {\n        to: \"/Home\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return reactApp;\n}(Component);\n\nexport { reactApp as default };","map":{"version":3,"sources":["D:/Dokumente/Development/UBQ/UBQ2020Cobans/REactSelber/test/App.js"],"names":["React","Component","Beleuchtung","Navigation","Home","BrowserRouter","Route","Switch","Redirect","mqtt","client","mqttBrokerIP","portNum","GLOBAL_DATA","reactApp","state","myText","_humidity","data","temperature","humidity","gauge","setHumidity","getHumidity","bind","console","log","toString","connect","clientId","port","path","protocolId","protocolVersion","connectTimeout","on","err","subscribe","publish","qos","topic","message","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Beleuchtung } from \"./Beleuchtung\";\r\nimport { Navigation } from \"./Navigation\";\r\nimport { Home }   from \"./Home\";\r\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport mqtt from \"mqtt\";\r\n\r\nvar client; //mqtt client object\r\nvar mqttBrokerIP=\"mqtt://34.107.25.251\";\r\nvar portNum = 1888;\r\n\r\n\r\n\r\nimport GLOBAL_DATA from './globalData.js'\r\n\r\nexport default class reactApp extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myText: \"My Original Text\",\r\n      _humidity:0,\r\n      data: 'Jordan Belfort'\r\n    };\r\n    GLOBAL_DATA.temperature=this;\r\n    GLOBAL_DATA.humidity=this;\r\n    GLOBAL_DATA.gauge=this;\r\n\r\n    this.setHumidity=this.getHumidity.bind(this);\r\n  }\r\n\r\n  getHumidity(){\r\n    //this.setState({fillHumidity:x});\r\n    console.log(\"->>>>\"+this.state.humidity)\r\n    return 42;\r\n    return GLOBAL_DATA.humidity.toString();\r\n  }\r\n\r\n  \r\n\r\n  componentWillMount() {  \r\n    client = mqtt.connect(mqttBrokerIP,{\r\n      clientId: 'SmartCoban',\r\n      port: portNum,\r\n      path: '/mqtt',\r\n      protocolId: 'MQIsdp',\r\n        protocolVersion: 3,\r\n        connectTimeout:5000,\r\n        //incomingStore:manager.incoming,\r\n        //outgoingStore:manager.outgoing\r\n      });\r\n\r\n\r\n      client.on(\"connect\",function(err){\r\n        console.log(\">>>\"+err);\r\n\r\n        client.subscribe(\"dht22/humidity\", function (err) {\r\n          if (!err) { \r\n            client.publish(\"dht22/humidity\", \"Hello on startup\",{qos: 1});\r\n          }else{\r\n            console.log(err);\r\n          }\r\n        });\r\n\r\n        \r\n\r\n      });\r\n\r\n\r\n      client.on(\"message\",function(topic,message){\r\n        console.log(topic+\": \"+message.toString());\r\n        GLOBAL_DATA.humidity.setState({humidity:message.toString()}); \r\n      });\r\n\r\n      \r\n      \r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <BrowserRouter>\r\n      <Navigation/>\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path='/Beleuchtung' component={Beleuchtung} />\r\n          <Route path='/Home' component={Home} />\r\n          <Redirect to='/Home' component={Home} />\r\n        </Switch>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}