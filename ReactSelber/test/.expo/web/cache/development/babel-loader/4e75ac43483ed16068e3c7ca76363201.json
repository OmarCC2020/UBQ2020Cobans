{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kocak\\\\Desktop\\\\Projekte\\\\UBQ\\\\SmartHomeApp\\\\UBQ2020Cobans\\\\ReactSelber\\\\test\\\\Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Row, Container, Col } from 'react-bootstrap';\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nexport var Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fillTemp: 50,\n      fillHumdity: 20\n    };\n\n    _this.syncronice = function (state) {\n      console.log(\"get from mqtt\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }\n      }, \"Temperatur\"), React.createElement(AnimatedCircularProgress, {\n        size: 200,\n        width: 15,\n        fill: this.state.fillTemp,\n        tintColor: \"#00e0ff\",\n        backgroundColor: \"#3d5875\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, function (fill) {\n        return React.createElement(Text, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, _this2.state.fillTemp);\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, \"Humidity\"), React.createElement(AnimatedCircularProgress, {\n        size: 200,\n        width: 15,\n        fill: this.state.fillHumdity,\n        tintColor: \"#00e0ff\",\n        backgroundColor: \"#3d5875\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, function (fill) {\n        return React.createElement(Text, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }\n        }, _this2.state.fillHumdity);\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.syncronice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"SYNCRONICE\"))));\n    }\n  }]);\n\n  return Home;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 12,\n    paddingVertical: 10,\n    alignItems: 'center',\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n    justifyContent: 'center'\n  },\n  button: {\n    fontWeight: \"bold\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Kocak/Desktop/Projekte/UBQ/SmartHomeApp/UBQ2020Cobans/ReactSelber/test/Home.js"],"names":["React","Component","Button","Row","Container","Col","AnimatedCircularProgress","Home","state","fillTemp","fillHumdity","syncronice","console","log","styles","title","fill","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","marginLeft","marginRight","marginTop","paddingVertical","color","textAlign","fontSize","fontWeight","button"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,EAAiCC,GAAjC,QAA2C,iBAA3C;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AAEA,WAAaC,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAEEC,KAFF,GAEU;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE;AAFP,KAFV;;AAAA,UAOEC,UAPF,GAOe,UAACH,KAAD,EAAW;AAEtBI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAVH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAYa;AAAA;;AACL,aAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAGE,oBAAC,wBAAD;AACE,QAAA,IAAI,EAAE,GADR;AAEE,QAAA,KAAK,EAAE,EAFT;AAGE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,QAHnB;AAIE,QAAA,SAAS,EAAC,SAJZ;AAKE,QAAA,eAAe,EAAC,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,UAACO,IAAD;AAAA,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAI,CAACP,KAAL,CAAWC,QADb,CADF;AAAA,OAPJ,CAHF,CADA,CADA,EAuBA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,EAIC,oBAAC,wBAAD;AACE,QAAA,IAAI,EAAE,GADR;AAEE,QAAA,KAAK,EAAE,EAFT;AAGE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWE,WAHnB;AAIE,QAAA,SAAS,EAAC,SAJZ;AAKE,QAAA,eAAe,EAAC,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,UAACM,IAAD;AAAA,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAI,CAACP,KAAL,CAAWE,WADb,CADF;AAAA,OAPJ,CAJD,CADD,CAvBA,EA8CA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AACA,QAAA,OAAO,EAAG,KAAKC,UADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CA9CA,CADF,CAFF;AAyDD;AAtEP;;AAAA;AAAA,EAA0BV,SAA1B;AA0EA,IAAMa,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADkB;AAQ7BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,UAAU,EAAE,MADP;AAELC,IAAAA,WAAW,EAAE,MAFR;AAGLC,IAAAA,SAAS,EAAE,EAHN;AAILC,IAAAA,eAAe,EAAE,EAJZ;AAKLL,IAAAA,UAAU,EAAE,QALP;AAMLM,IAAAA,KAAK,EAAE,SANF;AAOLC,IAAAA,SAAS,EAAE,QAPN;AAQLC,IAAAA,QAAQ,EAAE,EARL;AASLC,IAAAA,UAAU,EAAE,MATP;AAULR,IAAAA,cAAc,EAAE;AAVX,GARsB;AAqB7BS,EAAAA,MAAM,EAAE;AACND,IAAAA,UAAU,EAAE,MADN;AAENR,IAAAA,cAAc,EAAE;AAFV;AArBqB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { StyleSheet, Text, View} from 'react-native';\r\nimport { Button, Row, Container, Col} from 'react-bootstrap';\r\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\r\n\r\nexport class Home extends Component {\r\n\r\n  state = {\r\n    fillTemp: 50,\r\n    fillHumdity: 20,\r\n  };\r\n\r\n  syncronice = (state) => {\r\n    // TODO: mqtt verbindung zur LED lampe color muss von hex auf RGB \r\n    console.log(\"get from mqtt\")\r\n  }\r\n\r\n    render() {\r\n        return (\r\n    \r\n          <View> \r\n            <Container fluid>\r\n            <Row>\r\n            <Col>\r\n             <Text style={styles.title}>Temperatur</Text>\r\n\r\n              <AnimatedCircularProgress\r\n                size={200}\r\n                width={15}\r\n                fill={this.state.fillTemp}\r\n                tintColor=\"#00e0ff\"\r\n                backgroundColor=\"#3d5875\">\r\n                {\r\n                  (fill) => (\r\n                    <Text style={styles.title}>\r\n                    { this.state.fillTemp }\r\n                  </Text>\r\n                  )\r\n                }\r\n              </AnimatedCircularProgress>\r\n            </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n             <Col>\r\n           \r\n              <Text style={styles.title}>Humidity</Text>\r\n           \r\n              <AnimatedCircularProgress\r\n                size={200}\r\n                width={15}\r\n                fill={this.state.fillHumdity}\r\n                tintColor=\"#00e0ff\"\r\n                backgroundColor=\"#3d5875\">\r\n                {\r\n                  (fill) => (\r\n                    <Text style={styles.title}>\r\n                    { this.state.fillHumdity }\r\n                  </Text>\r\n                  )\r\n                }\r\n              </AnimatedCircularProgress>\r\n\r\n             </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Button variant=\"primary\"\r\n              onClick={ this.syncronice }>SYNCRONICE</Button>\r\n            </Row>\r\n\r\n           </Container> \r\n          </View>\r\n        );\r\n      }\r\n}\r\n\r\n//Styles für aussehen\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  \r\n    title: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: 12,\r\n      paddingVertical: 10,\r\n      alignItems: 'center',\r\n      color: \"#20232a\",\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n      fontWeight: \"bold\",\r\n      justifyContent: 'center',\r\n    },\r\n\r\n    button: {\r\n      fontWeight: \"bold\",\r\n      justifyContent: 'center',\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}