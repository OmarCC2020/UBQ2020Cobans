{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Dokumente\\\\Development\\\\UBQ\\\\UBQ2020Cobans\\\\REactSelber\\\\test\\\\Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Row, Container, Col } from \"react-bootstrap\";\nimport { AnimatedCircularProgress } from \"react-native-circular-progress\";\nimport reactApp from \"./App\";\nexport var Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _this.synchronize = function (state) {\n      console.log(\"get from mqtt\");\n      console.log(reactApp.prototype.getHumidity());\n    };\n\n    _this.state = {\n      fillTemp: 50,\n      fillHumidity: 20\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, \"Temperatur\"), React.createElement(AnimatedCircularProgress, {\n        size: 200,\n        width: 15,\n        fill: reactApp.prototype.getTemperature(),\n        tintColor: \"#00e0ff\",\n        backgroundColor: \"#3d5875\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, function (fill) {\n        return React.createElement(Text, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }\n        }, reactApp.prototype.getTemperature());\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, \"Humidity\"), React.createElement(AnimatedCircularProgress, {\n        size: 200,\n        width: 15,\n        fill: reactApp.prototype.getHumidity(),\n        tintColor: \"#00e0ff\",\n        backgroundColor: \"#3d5875\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, function (fill) {\n        return React.createElement(Text, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }\n        }, reactApp.prototype.getHumidity(), \" %\");\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.synchronize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"SYNCRONICE\"))));\n    }\n  }]);\n\n  return Home;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 12,\n    paddingVertical: 10,\n    alignItems: \"center\",\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Dokumente/Development/UBQ/UBQ2020Cobans/REactSelber/test/Home.js"],"names":["React","Component","Button","Row","Container","Col","AnimatedCircularProgress","reactApp","Home","props","synchronize","state","console","log","prototype","getHumidity","fillTemp","fillHumidity","styles","container","title","getTemperature","fill","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginLeft","marginRight","marginTop","paddingVertical","color","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Button, Row, Container, Col } from \"react-bootstrap\";\r\nimport { AnimatedCircularProgress } from \"react-native-circular-progress\";\r\nimport reactApp from \"./App\";\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fillTemp: 50,\r\n      fillHumidity: 20,\r\n    };\r\n  }\r\n\r\n  synchronize = (state) => {\r\n    // TODO: mqtt verbindung\r\n    console.log(\"get from mqtt\");\r\n    console.log(reactApp.prototype.getHumidity());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n              <Text style={styles.title}>Temperatur</Text>\r\n\r\n              <AnimatedCircularProgress\r\n                size={200}\r\n                width={15}\r\n                fill={reactApp.prototype.getTemperature()}\r\n                tintColor=\"#00e0ff\"\r\n                backgroundColor=\"#3d5875\">\r\n                {(fill) => (\r\n                  <Text style={styles.title}>{reactApp.prototype.getTemperature()}</Text>\r\n                )}\r\n              </AnimatedCircularProgress>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Text style={styles.title}>Humidity</Text>\r\n\r\n              <AnimatedCircularProgress\r\n                size={200}\r\n                width={15}\r\n                fill={reactApp.prototype.getHumidity()}\r\n                tintColor=\"#00e0ff\"\r\n                backgroundColor=\"#3d5875\">\r\n                {(fill) => (\r\n                  <Text style={styles.title}>{reactApp.prototype.getHumidity()} %</Text>\r\n                )}\r\n              </AnimatedCircularProgress>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Button variant=\"primary\" onClick={this.synchronize}>SYNCRONICE</Button>\r\n          </Row>\r\n        </Container>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n//StyleSheet\r\n//TODO: sachen mit flexbox/bootstrap zentrieren und responsive machen\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n\r\n  title: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: 12,\r\n    paddingVertical: 10,\r\n    alignItems: \"center\",\r\n    color: \"#20232a\",\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}