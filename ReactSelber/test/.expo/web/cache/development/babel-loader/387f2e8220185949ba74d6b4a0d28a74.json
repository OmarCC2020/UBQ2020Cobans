{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Dokumente\\\\Development\\\\UBQ\\\\UBQ2020Cobans\\\\ReactSelber\\\\test\\\\Beleuchtung.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Row, Container, Col, ToggleButton } from 'react-bootstrap';\nimport { SliderPicker } from 'react-color';\nimport reactApp from \"./App\";\nexport var Beleuchtung = function (_Component) {\n  _inherits(Beleuchtung, _Component);\n\n  var _super = _createSuper(Beleuchtung);\n\n  function Beleuchtung() {\n    var _this;\n\n    _classCallCheck(this, Beleuchtung);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      background: '#fff',\n      checked: false,\n      setChecked: false\n    };\n\n    _this.handleChangeComplete = function (color) {\n      _this.setState({\n        background: color.hex\n      });\n    };\n\n    _this.callColor = function (color) {\n      _this.setState({\n        background: color.hex\n      });\n\n      console.log(_this.state.background);\n      reactApp.prototype.setLedColor(_this.state.background);\n    };\n\n    return _this;\n  }\n\n  _createClass(Beleuchtung, [{\n    key: \"setChecked\",\n    value: function setChecked(state) {\n      this.setState({\n        checked: state\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"Beleuchtung\"), React.createElement(ToggleButton, {\n        type: \"checkbox\",\n        variant: \"secondary\",\n        checked: this.state.checked,\n        value: \"1\",\n        onChange: function onChange(e) {\n          return _this2.setChecked(e.currentTarget.checked);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, \"Checked\")), React.createElement(View, {\n        style: styles.slider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, React.createElement(SliderPicker, {\n        color: this.state.background,\n        onChangeComplete: this.handleChangeComplete && this.callColor,\n        onPress: this.callColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n\n  return Beleuchtung;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    backgroundColor: '#fffff',\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: 10\n  },\n  slider: {\n    flex: 1,\n    margin: 10,\n    padding: 10\n  },\n  title: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 12,\n    paddingVertical: 10,\n    alignItems: 'center',\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n    justifyContent: 'center'\n  },\n  button: {\n    padding: 50,\n    textAlign: 50\n  }\n});","map":{"version":3,"sources":["D:/Dokumente/Development/UBQ/UBQ2020Cobans/ReactSelber/test/Beleuchtung.js"],"names":["React","Component","Button","Row","Container","Col","ToggleButton","SliderPicker","reactApp","Beleuchtung","state","background","checked","setChecked","handleChangeComplete","color","setState","hex","callColor","console","log","prototype","setLedColor","styles","container","title","e","currentTarget","slider","StyleSheet","create","flex","flexDirection","flexWrap","backgroundColor","alignItems","alignContent","justifyContent","padding","margin","marginLeft","marginRight","marginTop","paddingVertical","textAlign","fontSize","fontWeight","button"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Button, Row, Container, Col ,ToggleButton} from 'react-bootstrap';\r\nimport { SliderPicker } from 'react-color';\r\n\r\nimport reactApp from \"./App\";\r\n\r\nexport class Beleuchtung extends Component {\r\n  \r\n  state = {\r\n    background: '#fff',\r\n    checked: false,\r\n    setChecked: false,\r\n  };  \r\n\r\n  handleChangeComplete = (color) => {\r\n    this.setState({ background: color.hex });\r\n    //console.log(\"Selected Color\" + { background: color.hex } )\r\n  };\r\n\r\n  setChecked(state){\r\n    this.setState({checked:state});\r\n  }\r\n\r\n  callColor = (color) => {\r\n    // TODO: mqtt verbindung zur LED lampe color muss von hex auf RGB \r\n    this.setState({ background: color.hex });\r\n    //console.log(\"Selected Color\" + {background: color.hex } )\r\n    console.log(this.state.background);\r\n    reactApp.prototype.setLedColor(this.state.background);\r\n  }\r\n\r\n    render() {\r\n        return (    \r\n          <View>            \r\n\r\n            <View style={styles.container}>\r\n              <Text style={styles.title}>Beleuchtung</Text> \r\n\r\n              <ToggleButton\r\n                type=\"checkbox\"\r\n                variant=\"secondary\"\r\n                checked={this.state.checked}\r\n                value=\"1\"\r\n                onChange={(e) => this.setChecked(e.currentTarget.checked)}                            \r\n                >\r\n                Checked\r\n              </ToggleButton>  \r\n            </View>    \r\n\r\n            <View style={styles.slider}>\r\n              <SliderPicker \r\n                color={ this.state.background }\r\n                onChangeComplete={ this.handleChangeComplete && this.callColor }\r\n                onPress={this.callColor}\r\n              />\r\n            </View>\r\n                 \r\n          </View>\r\n        );\r\n      }\r\n}\r\n\r\n//Styles für aussehen\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n      backgroundColor: '#fffff',\r\n      alignItems: 'center',\r\n      alignContent: 'center',\r\n      justifyContent: 'center',\r\n      padding: 10,\r\n    },\r\n\r\n    slider:{\r\n      flex: 1,\r\n      margin:10,\r\n      padding: 10,\r\n    },\r\n  \r\n    title: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: 12,\r\n      paddingVertical: 10,\r\n      alignItems: 'center',\r\n      color: \"#20232a\",\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n      fontWeight: \"bold\",\r\n      justifyContent: 'center',\r\n    },\r\n\r\n    button: {\r\n      padding: 50,\r\n      textAlign: 50\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}