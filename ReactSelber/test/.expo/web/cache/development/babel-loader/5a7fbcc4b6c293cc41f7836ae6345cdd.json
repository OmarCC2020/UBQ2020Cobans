{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kocak\\\\Desktop\\\\Projekte\\\\UBQ\\\\SmartHomeApp\\\\UBQ2020Cobans\\\\ReactSelber\\\\test\\\\Beleuchtung.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, Row, Container, Col } from 'react-bootstrap';\nimport { SliderPicker } from 'react-color';\nexport var Beleuchtung = function (_Component) {\n  _inherits(Beleuchtung, _Component);\n\n  var _super = _createSuper(Beleuchtung);\n\n  function Beleuchtung() {\n    var _this;\n\n    _classCallCheck(this, Beleuchtung);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      background: '#fff'\n    };\n\n    _this.handleChangeComplete = function (color) {\n      _this.setState({\n        background: color.hex\n      });\n    };\n\n    _this.callColor = function (color) {\n      console.log(\"Selected Color\" + {\n        background: color.hex\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Beleuchtung, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        onPress: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      }, \"Beleuchtung\"))), React.createElement(SliderPicker, {\n        style: styles.container,\n        color: this.state.background,\n        onChangeComplete: this.handleChangeComplete && this.callColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return Beleuchtung;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    marginTop: 16,\n    paddingVertical: 8,\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  button: {\n    padding: 50,\n    textAlign: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/Kocak/Desktop/Projekte/UBQ/SmartHomeApp/UBQ2020Cobans/ReactSelber/test/Beleuchtung.js"],"names":["React","Component","Button","Row","Container","Col","SliderPicker","Beleuchtung","state","background","handleChangeComplete","color","setState","hex","callColor","console","log","styles","title","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginTop","paddingVertical","textAlign","fontSize","fontWeight","button","padding"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,EAAiCC,GAAjC,QAA2C,iBAA3C;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAEEC,KAFF,GAEU;AACNC,MAAAA,UAAU,EAAE;AADN,KAFV;;AAAA,UAMEC,oBANF,GAMyB,UAACC,KAAD,EAAW;AAChC,YAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEE,KAAK,CAACE;AAApB,OAAd;AACD,KARH;;AAAA,UAUEC,SAVF,GAUc,UAACH,KAAD,EAAW;AAErBI,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB;AAACP,QAAAA,UAAU,EAAEE,KAAK,CAACE;AAAnB,OAA/B;AACD,KAbH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAea;AACL,aAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC,KAApB;AACL,QAAA,OAAO,MADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAL,CADF,CAFF,EAOE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAGD,MAAM,CAACE,SAA7B;AACE,QAAA,KAAK,EAAG,KAAKX,KAAL,CAAWC,UADrB;AAEE,QAAA,gBAAgB,EAAG,KAAKC,oBAAL,IAA6B,KAAKI,SAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADA,CAFF;AAkBD;AAlCP;;AAAA;AAAA,EAAiCb,SAAjC;AAsCA,IAAMgB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADkB;AAQ7BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,eAAe,EAAE,CAFZ;AAGLhB,IAAAA,KAAK,EAAE,SAHF;AAILiB,IAAAA,SAAS,EAAE,QAJN;AAKLC,IAAAA,QAAQ,EAAE,EALL;AAMLC,IAAAA,UAAU,EAAE;AANP,GARsB;AAiB7BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,EADH;AAENJ,IAAAA,SAAS,EAAE;AAFL;AAjBqB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { StyleSheet, Text, View , TouchableOpacity, Alert} from 'react-native';\r\nimport { Button, Row, Container, Col} from 'react-bootstrap';\r\nimport { SliderPicker } from 'react-color';\r\n\r\nexport class Beleuchtung extends Component {\r\n  \r\n  state = {\r\n    background: '#fff',\r\n  };  \r\n\r\n  handleChangeComplete = (color) => {\r\n    this.setState({ background: color.hex });\r\n  };\r\n\r\n  callColor = (color) => {\r\n    // TODO: mqtt verbindung zur LED lampe color muss von hex auf RGB \r\n    console.log(\"Selected Color\" + {background: color.hex } )\r\n  }\r\n\r\n    render() {\r\n        return (\r\n    \r\n          <View> \r\n          <Container fluid>\r\n\r\n            <Row>\r\n              <Col><Text style={styles.title}\r\n              onPress>Beleuchtung</Text></Col>\r\n            </Row>\r\n         \r\n            <SliderPicker style ={styles.container}\r\n              color={ this.state.background }\r\n              onChangeComplete={ this.handleChangeComplete && this.callColor }\r\n              // onPress={this.callColor}\r\n            />\r\n          </Container> \r\n          </View>\r\n        );\r\n      }\r\n}\r\n\r\n//Styles f√ºr aussehen\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  \r\n    title: {\r\n      marginTop: 16,\r\n      paddingVertical: 8,\r\n      color: \"#20232a\",\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n      fontWeight: \"bold\"\r\n    },\r\n\r\n    button: {\r\n      padding: 50,\r\n      textAlign: 50\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}